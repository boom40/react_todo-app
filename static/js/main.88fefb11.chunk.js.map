{"version":3,"sources":["TodoApp.js","TodoItem.js","TodoList.js","TodosFilter.js","App.js","index.js"],"names":["TodoApp","_ref","createNewTodo","addNewTodo","enterNewTodo","react_default","a","createElement","onSubmit","className","placeholder","onChange","value","TodoItem","props","changeStateComplete","todo","id","checked","complete","type","title","onClick","deleteTodo","index","TodoList","filtresTodos","map","i","key","src_TodoItem","TodosFilter","idFiltres","setIdFiltres","href","todosArr","App","state","todosList","isCompleted","clearCompleted","_this","setState","filter","lengthCompeletedTodos","x","length","stateCompleted","event","target","preventDefault","_this$state","Date","concat","Object","toConsumableArray","checkboxValue","allSelectTodo","objectSpread2","todoId","splice","_this2","this","_this$state2","src_TodoApp","style","display","htmlFor","src_TodoList","src_TodosFilter","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.88fefb11.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoApp = ({ createNewTodo, addNewTodo, enterNewTodo }) => (\n  <form onSubmit={addNewTodo}>\n    <input\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n      onChange={enterNewTodo}\n      value={createNewTodo}\n    />\n  </form>\n);\n\nTodoApp.propTypes = {\n  createNewTodo: PropTypes.string.isRequired,\n  addNewTodo: PropTypes.func.isRequired,\n  enterNewTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = props => (\n  <div className=\"view\">\n    <input\n      onChange={() => props.changeStateComplete(props.todo.id)}\n      checked={props.todo.complete}\n      type=\"checkbox\"\n      className=\"toggle\"\n    />\n    <label\n      className={props.todo.complete ? 'view__completed' : ''}\n    >\n      {props.todo.title}\n    </label>\n    <button\n      onClick={() => props.deleteTodo(props.index)}\n      type=\"button\"\n      className=\"destroy\"\n    />\n  </div>\n);\n\nTodoItem.propTypes = {\n  changeStateComplete: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  todo: PropTypes.shape({\n    complete: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n    id: PropTypes.number,\n    title: PropTypes.string,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ filtresTodos, changeStateComplete, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {filtresTodos.map((todo, i) => (\n      <li key={todo.id}>\n        <TodoItem\n          index={i}\n          todo={todo}\n          changeStateComplete={changeStateComplete}\n          deleteTodo={deleteTodo}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  filtresTodos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeStateComplete: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodosFilter = ({ idFiltres, setIdFiltres }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={idFiltres === 'filtersAll' ? 'selected' : ''}\n        id=\"filtersAll\"\n        onClick={() => setIdFiltres('filtersAll')}\n      >\n      All\n      </a>\n    </li>\n    <li>\n      <a\n        href=\"#/active\"\n        id=\"filtersActiv\"\n        className={idFiltres === 'filtersActiv' ? 'selected' : ''}\n        onClick={() => setIdFiltres('filtersActiv')}\n      >\n      Active\n      </a>\n    </li>\n    <li>\n      <a\n        href=\"#/completed\"\n        id=\"filtersCompleted\"\n        className={idFiltres === 'filtersCompleted' ? 'selected' : ''}\n        onClick={() => setIdFiltres('filtersCompleted')}\n      >\n      Completed\n      </a>\n    </li>\n  </ul>\n);\n\nTodosFilter.propTypes = {\n  idFiltres: PropTypes.string.isRequired,\n  setIdFiltres: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport TodoList from './TodoList';\nimport TodosFilter from './TodosFilter';\n\nconst todosArr = [];\n\nclass App extends React.Component {\n  state ={\n    idFiltres: '',\n    todosList: todosArr,\n    createNewTodo: '',\n    isCompleted: true,\n  }\n\n  clearCompleted = () => {\n    this.setState(state => ({\n      todosList: state.todosList.filter(todo => todo.complete === false),\n    }));\n  }\n\n  lengthCompeletedTodos = x => (\n    this.state.todosList.filter(todo => todo.complete === x).length\n  )\n\n  setIdFiltres = (stateCompleted) => {\n    this.setState({ idFiltres: stateCompleted });\n  }\n\n  filtresTodos = () => {\n    switch (this.state.idFiltres) {\n      case 'filtersActiv':\n        return this.state.todosList.filter(todo => todo.complete === false);\n      case 'filtersCompleted':\n        return this.state.todosList.filter(todo => todo.complete === true);\n      default: return this.state.todosList;\n    }\n  }\n\n  enterNewTodo = (event) => {\n    this.setState({ createNewTodo: event.target.value });\n  }\n\n  addNewTodo = (event) => {\n    event.preventDefault();\n\n    if (!this.state.createNewTodo.length > 0) {\n      return;\n    }\n\n    this.setState(() => {\n      const { todosList, createNewTodo } = this.state;\n      const todo = {\n        complete: false,\n        id: +new Date(),\n        title: createNewTodo,\n      };\n\n      return {\n        todosList: [...todosList, todo],\n        createNewTodo: '',\n      };\n    });\n  }\n\n  checkboxValue = (event) => {\n    this.setState({ isCompleted: event.target.checked });\n    this.allSelectTodo(this.state.isCompleted);\n  };\n\n  allSelectTodo = (x) => {\n    this.setState(state => ({\n      todosList: state.todosList.map(todo => (\n        {\n          ...todo, complete: x,\n        })),\n    }));\n  }\n\n  changeStateComplete = (todoId) => {\n    this.setState(state => ({\n      todosList: state.todosList.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          complete: !todo.complete,\n        };\n      }),\n    }));\n  }\n\n  deleteTodo = (i) => {\n    this.setState(state => state.todosList.splice(i, 1));\n  }\n\n  render() {\n    const { todosList,\n      createNewTodo,\n      isCompleted,\n      idFiltres } = this.state;\n\n    const { addNewTodo,\n      enterNewTodo,\n      changeStateComplete,\n      deleteTodo,\n      setIdFiltres } = this;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <TodoApp\n            createNewTodo={createNewTodo}\n            addNewTodo={addNewTodo}\n            enterNewTodo={enterNewTodo}\n          />\n        </header>\n\n        <section\n          className=\"main\"\n          style={{ display: 'block' }}\n        >\n          <input\n            onChange={this.checkboxValue}\n            checked={isCompleted}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            filtresTodos={this.filtresTodos()}\n            changeStateComplete={changeStateComplete}\n            deleteTodo={deleteTodo}\n          />\n        </section>\n\n        <footer\n          className=\"footer\"\n          style={{\n            display: `${todosList.length > 0 ? 'block' : 'none'}`,\n          }}\n        >\n          <span className=\"todo-count\">\n            {this.lengthCompeletedTodos(false)}\n            {` items left`}\n          </span>\n          <TodosFilter\n            setIdFiltres={setIdFiltres}\n            idFiltres={idFiltres}\n          />\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{\n              display: `${this.lengthCompeletedTodos(true) > 0\n                ? 'block' : 'none'}`,\n            }}\n            onClick={() => this.clearCompleted()}\n          >\n            Clear-completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}